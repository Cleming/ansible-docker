
- name: Adds docker key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  tags: docker

- name: Adds docker repos
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
    state: present
  tags: docker

- name: Installs docker engine & compose
  apt:
    pkg: "{{ item }}"
    state: present
  with_items:
    - "docker-engine={{ docker_version }}"
    - docker-compose
  tags: docker
  register: __docker_installed

- name: Installs pip
  apt: name=python-pip state=present
  tags: docker

- name: Installs docker python support
  pip: name=docker-py state=present
  tags: docker

- name: Adds docker options if any (<16.04)
  lineinfile:
    dest: /etc/default/docker
    regexp: "--insecure-registry"
    line: 'DOCKER_OPTS="$DOCKER_OPTS {{ docker_daemon_options }}"'
  when: docker_daemon_options != "" and ansible_distribution_version | version_compare('16.04','<')
  notify: Restart docker

- name: Adds docker options if any 1/2 (16.04+)
  file:
    path: /etc/systemd/system/docker.service.d/
    state: directory
  when: docker_daemon_options != "" and ansible_distribution_version | version_compare('16.04','>=')

- name: Adds docker options if any 2/2 (16.04+)
  template:
    src: systemd_options.conf.j2
    dest: /etc/systemd/system/docker.service.d/options.conf
  when: docker_daemon_options != "" and ansible_distribution_version | version_compare('16.04','>=')
  notify:
    - Reload systemd

- meta: flush_handlers
  when: __docker_installed|changed

- name: Ensure daemon is started
  service:
    name: docker
    state: started
  when: __docker_installed|changed

- name: Adds datadog user to docker group
  user:
    name: dd-agent
    append: yes
    groups: docker
  when: datadog_enabled | default(false)

- name: Adds datadog integration
  template:
    src: datadog_docker.yaml.j2
    dest: /etc/dd-agent/conf.d/docker_daemon.yaml
  when: datadog_enabled | default(false)
  notify: Restart datadog-agent
